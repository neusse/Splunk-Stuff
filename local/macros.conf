


# this will check if a result set is empty, no results. 
# If so it will add a field telling the user that the results are empty for clarity
[is_report_empty(1)]
args = mycount
definition = appendpipe [ stats count  | where count<=$mycount$| eval ReportInfoMsg="No Results found for Report" | fields - count ]
iseval = 0

# this does a very simple space encodeing for places that might require it
[url_encoding(1)]
iseval = 0
definition = rex mode=sed field=$query$ "s/\r?\n|\r/%20/g"\
| rex mode=sed field=$query$ "s/ /%20/g"
args = query


# when working with Oracle and mybe other SQL DB's you may run into the problem that all fields are returned in uppercase
# this macro will convert fileds to lowercase so they match your SPL.  Yes this was a thing.
# not sure the addinfo is usefull
[lower_fields(1)]
args = fields
definition = makeresults | addinfo\
| eval X=""\
| foreach $fields$ fieldstr="#field#" [ eval Y = "#field#"." as \\\"".lower("#field#")."\\\"" | eval X=Y.", ".X ]\
| eval X = substr(X, 1, len(X)-2)\
| table X
iseval = 0


# does what it says
[remove_quotes(1)]
args = var
definition = eval $var$=replace($var$,"\"","")
iseval = 0

# for some reports that seem to repeat the same theam <?splling  
[rename_time(1)]
args = field
definition = rename _time as $field$ |  eval $field$=strftime($field$,"%Y-%b-%d")
iseval = 0

# for some reports that seem to repeat the same theam <?splling  
[rename_time(2)]
args = field,pattern
definition = rename _time as $field$ |  eval $field$=strftime($field$,"$pattern$")
iseval = 0


[master_query(2)]
args = fields,table
definition = makeresults | addinfo\
| eval X=""\
| foreach $fields$ fieldstr="#field#" [ eval Y = upper("#field#")." as \"".lower("#field#")."\"" | eval X=Y.", ".X ]\
| eval X = substr(X, 1, len(X)-2)\
| map search="dbxquery connection=AUXDB shortnames=true query=\"select \"$X$\" from $table$\""
iseval = 0

[master_query(3)]
args = fields,table,checkvar
definition = makeresults \
| eval X=""\
| foreach $fields$ fieldstr="#field#" [ eval Y = upper("#field#")." as \"".lower("#field#")."\"" | eval X=Y.", ".X ]\
| eval X = substr(X, 1, len(X)-2)\
| addinfo\
| eval info_max_time=if(info_max_time="+Infinity",now(),info_max_time)\
| eval olate = strftime( info_max_time, "%Y-%m-%d %H:%M:%S.%3N" ) \
| eval oearl = strftime( info_min_time, "%Y-%m-%d %H:%M:%S.%3N" )\
| fields X,olate,oearl\
| map search="dbxquery connection=AUXDB shortnames=true query=\"select \"$X$\" from $table$ where $checkvar$ between to_timestamp('$oearl$', 'YYYY-MM-DD hh24:mi:ss.ff') and to_timestamp('$olate$', 'YYYY-MM-DD hh24:mi:ss.ff') \""
iseval = 0

[master_query(4)]
args = fields,table,checkvar,groupby
definition = makeresults\
| eval X=""\
| foreach $fields$ fieldstr="#field#" [ eval Y = upper("#field#")." as \"".lower("#field#")."\"" | eval X=Y.", ".X ]\
| eval X = substr(X, 1, len(X)-2)\
| addinfo\
| eval info_max_time=if( info_max_time="+Infinity",now(),info_max_time)\
| eval olate = strftime( info_max_time, "%Y-%m-%d %H:%M:%S.%3N" ) \
| eval oearl = strftime( info_min_time, "%Y-%m-%d %H:%M:%S.%3N" )\
| fields X,olate,oearl\
| eval G = "$groupby$"\
| map search="dbxquery connection=AUXDB shortnames=true query=\"select \"$X$\" from $table$ where $checkvar$ between to_timestamp('$oearl$', 'YYYY-MM-DD hh24:mi:ss.ff') and to_timestamp('$olate$', 'YYYY-MM-DD hh24:mi:ss.ff') \"$G$\" \""
iseval = 0

[master_query(5)]
args = fields,table,checkvar,groupby,flag
definition = makeresults\
|addinfo\
| eval X = "$fields$"\
| eval info_max_time=if( info_max_time="+Infinity",now(),info_max_time)\
| eval olate = strftime( info_max_time, "%Y-%m-%d %H:%M:%S.%3N" ) \
| eval oearl = strftime( info_min_time, "%Y-%m-%d %H:%M:%S.%3N" )\
| fields X,olate,oearl\
| eval G = "$groupby$"\
| map search="dbxquery connection=AUXDB shortnames=true query=\"select \"$X$\" from $table$ where $checkvar$ between to_timestamp('$oearl$', 'YYYY-MM-DD hh24:mi:ss.ff') and to_timestamp('$olate$', 'YYYY-MM-DD hh24:mi:ss.ff') \"$G$\" \""\
\
iseval = 0

[master_query_single(5)]
definition = makeresults | addinfo \
| eval X = "$fields$"\
|eval ago=round((info_max_time-info_min_time))\
|eval ago="-".ago."s"\
| eval oearl=if(info_min_time=0,info_min_time,relative_time(info_min_time,ago))\
|eval oearl=strftime(oearl,"%Y-%m-%d %H:%M:%S")\
|eval olate=if(info_max_time="+Infinity",now(),relative_time(info_max_time,ago))\
|eval olate=strftime(olate,"%Y-%m-%d %H:%M:%S")\
| fields X,olate,oearl\
| eval G = "$groupby$"\
| map search="dbxquery connection=AUXDB shortnames=true query=\"select \"$X$\" from $table$ where $checkvar$ between to_timestamp('$oearl$', 'YYYY-MM-DD hh24:mi:ss.ff') and to_timestamp('$olate$', 'YYYY-MM-DD hh24:mi:ss.ff') \"$G$\" \""\

iseval = 0

# this was used while refactoring when upgrading to dbconnect 3
[hdbquery_save(2)]
args = myquery,myconn
definition = dbxquery connection=$myconn$ shortnames=true query="$myquery$"
iseval = 0

# this seems useless in its current state in that it deas not seem reusable.
# i will rework it so it is a true macro.
[date_year_quater(2)]
args = quater,year,myconn
definition = | dbxquery connection=$myconn$ shortnames=true query="SELECT distinct(to_char(entry_date,'YYYY')) as year from sysadm.customer where to_char(entry_date,'YYYY') < to_char(sysdate, 'YYYY')"\
| append[| makeresults\
		 | eval YEAR="This Year"\
		 | table YEAR]\
|eval quater=split("This Quater,Q1,Q2,Q3,Q4",",")\
| mvexpand quater \
| strcat YEAR " " quater Date\
| eval Y=if(YEAR="This Year",strftime(now(), "%Y"),YEAR)\
| eval olate =case(quater="This Quater",strftime( now(), "%Y-%m-%d %H:%M:%S" )\
					,quater="Q1",Y."-"."03-31 23:59:59"\
					,quater="Q2",Y."-"."06-30 23:59:59"\
					,quater="Q3",Y."-"."09-30 23:59:59"\
					,quater="Q4",Y."-"."12-31 23:59:59")\
| eval Q=strftime(now(), "%m")\
| eval Q=case(Q<=3,"Q1",Q<=6,"Q2",Q<=9,"Q3",Q<=12,"Q4",1=1,"missing")\
| eval Q=case(quater="This Quater",Q\
			,quater="Q1","Q1"\
			,quater="Q2","Q2"\
			,quater="Q3","Q3"\
			,quater="Q4","Q4"\
			,1=1,"incorrect or missing")\
| eval oearl=case(Q="Q1",Y."-"."01-01 00:00:00"\
				,Q="Q2",Y."-"."04-01 00:00:00"\
				,Q="Q3",Y."-"."07-01 00:00:00"\
				,Q="Q4",Y."-"."10-01 00:00:00"\
				,1=1,"incorrect or missing info")
iseval = 0

# this is to allow some output if nothing is found to report
[empty(1)]
args = mycount
definition = appendpipe [ stats count  | where count<=$mycount$| eval ReportInfoMsg="No Results found for Report" | fields - count ]
iseval = 0


# you guessed it
[comment(1)]
args = text
definition = ""
iseval = 1


[Sec2time(2)]
args = seconds, output
definition = eval sec2time_hours=floor(($seconds$/3600))| eval sec2time_minutes = floor(($seconds$/ 60) - (sec2time_hours * 60))| eval sec2time_minutes=if(length(sec2time_minutes)<2,"0"+sec2time_minutes,sec2time_minutes)   | strcat sec2time_hours ":" sec2time_minutes $output$|fields - sec2time_hours, sec2time_minutes
iseval = 0

[Sec2dayhourminsec(2)]
definition = eval sec2time_days=floor($seconds$/24/3600)\
| eval sec2time_hours=floor(($seconds$/3600)-(sec2time_days*24)) \
| eval sec2time_minutes = floor(($seconds$ / 60) - (sec2time_days*60*24) - (sec2time_hours * 60)) \
| eval sec2time_seconds = floor($seconds$ - (sec2time_days*3600*24) - (sec2time_hours * 3600) - (sec2time_minutes * 60)) \
|eval sec2time_minutes=if(length(sec2time_minutes)<2,"0"+sec2time_minutes,sec2time_minutes) \
|eval sec2time_seconds =if(length(sec2time_seconds)<2,"0"+sec2time_seconds,sec2time_seconds) \
|eval sec2time_days=if(length(sec2time_days)<2,"0"+sec2time_days,sec2time_days) \
|eval sec2time_hours=if(length(sec2time_hours)<2,"0"+sec2time_hours,sec2time_hours) \
|strcat sec2time_days ":" sec2time_hours ":" sec2time_minutes ":" sec2time_seconds $output$\
|fields - sec2time_hours,sec2time_days,sec2time_minutes,sec2time_seconds\

iseval = 0


# again I dont think addinfo is usefull here.
[myDBquery(2)]
args = myconnection,query
definition = makeresults | addinfo\
| eval info_max_time=if(info_max_time="+Infinity",now(),info_max_time)\
| eval olate = strftime( info_max_time, "%Y-%m-%d %H:%M:%S.%3N" ) \
| eval oearl = strftime( info_min_time, "%Y-%m-%d %H:%M:%S.%3N" )\
| map search="dbxquery connection=$myconnection$ shortnames=true query=\" $query$ \""
iseval = 0

